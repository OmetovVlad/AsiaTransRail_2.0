const sharp = require("sharp");
const fs = require("fs-extra");
const path = require("path");

const sourceSvg = "src/favicon.svg"; // –ò—Å—Ö–æ–¥–Ω—ã–π SVG
const outputPath = "dist"; // –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ –¥–ª—è —Ñ–∞–≤–∏–∫–æ–Ω–æ–∫

// –†–∞–∑–º–µ—Ä—ã —Ñ–∞–≤–∏–∫–æ–Ω–æ–∫
const sizes = [16, 32, 48, 72, 96, 144, 192, 512];

// –°–æ–∑–¥–∞—ë—Ç PNG –∏–∑ SVG –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ
async function createPngIcons() {
  try {
    console.log("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PNG —Ñ–∞–≤–∏–∫–æ–Ω–æ–∫...");
    for (const size of sizes) {
      await sharp(sourceSvg)
        .resize(size, size)
        .toFile(path.join(outputPath, `favicon-${size}x${size}.png`));
    }
    console.log("‚úÖ PNG —Ñ–∞–≤–∏–∫–æ–Ω–∫–∏ —Å–æ–∑–¥–∞–Ω—ã!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PNG —Ñ–∞–≤–∏–∫–æ–Ω–æ–∫:", error);
  }
}

// –°–æ–∑–¥–∞—ë—Ç ICO –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
async function createIco() {
  try {
    console.log("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è favicon.ico...");
    await sharp(sourceSvg)
      .resize(48, 48)
      .toFile(path.join(outputPath, "favicon.ico"));
    console.log("‚úÖ favicon.ico —Å–æ–∑–¥–∞–Ω!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è favicon.ico:", error);
  }
}

// –°–æ–∑–¥–∞—ë—Ç Apple Touch Icon
async function createAppleIcon() {
  try {
    console.log("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Apple Touch Icon...");
    await sharp(sourceSvg)
      .resize(180, 180)
      .toFile(path.join(outputPath, "apple-touch-icon.png"));
    console.log("‚úÖ Apple Touch Icon —Å–æ–∑–¥–∞–Ω!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Apple Touch Icon:", error);
  }
}

// –°–æ–∑–¥–∞—ë—Ç site.webmanifest
async function createManifest() {
  const manifest = {
    name: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–Ω–∞—è –ª–æ–≥–∏—Å—Ç–∏–∫–∞ –∏ –í–≠–î –ø–æ–¥ –∫–ª—é—á",
    short_name: "–ê–∑–∏—è–¢—Ä–∞–Ω—Å–†–µ–π–ª (–ê–¢–†)",
    icons: sizes.map((size) => ({
      src: `/favicon-${size}x${size}.png`,
      sizes: `${size}x${size}`,
      type: "image/png",
    })),
    theme_color: "#ffffff",
    background_color: "#ffffff",
    display: "standalone",
  };

  try {
    console.log("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è site.webmanifest...");
    await fs.writeFile(
      path.join(outputPath, "site.webmanifest"),
      JSON.stringify(manifest, null, 2)
    );
    console.log("‚úÖ site.webmanifest —Å–æ–∑–¥–∞–Ω!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è site.webmanifest:", error);
  }
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
(async function generateFavicons() {
  await fs.ensureDir(outputPath);
  await createPngIcons();
  await createIco();
  await createAppleIcon();
  await createManifest();
})();